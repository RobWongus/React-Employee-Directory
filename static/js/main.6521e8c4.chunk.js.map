{"version":3,"sources":["components/Navbar.js","components/Searchbar.js","components/EmployeeTable.js","App.js","index.js"],"names":["Navbar","props","Jumbotron","fluid","Container","Searchbar","Form","inline","className","FormControl","type","value","search","onChange","handleInputChange","placeholder","Button","variant","onClick","searchPeople","EmployeeTable","Table","striped","bordered","hover","sortPeople","peopleList","map","person","key","first","last","email","phone","dob","App","state","people","e","preventDefault","setState","target","length","filteredList","filter","includes","propToSortBy","sortedList","slice","sort","a","b","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uzBAkBeA,MAbf,SAAgBC,GACZ,OACI,6BACG,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACf,kBAACC,EAAA,EAAD,KACI,sD,uBCoBDC,EAzBG,SAACJ,GAEf,OACI,6BACI,kBAACK,EAAA,EAAD,CAAMC,QAAM,EAACC,UAAU,gBACnB,kBAACC,EAAA,EAAD,CACIC,KAAK,OACLC,MAAOV,EAAMW,OACbC,SAAUZ,EAAMa,kBAChBC,YAAY,SACZP,UAAU,YAEd,kBAACQ,EAAA,EAAD,CACIN,KAAK,SACLO,QAAQ,kBACRC,QAASjB,EAAMkB,cAHnB,a,QCgBDC,EA9BO,SAACnB,GAErB,OACI,6BACE,kBAACoB,EAAA,EAAD,CAAOb,UAAW,gBAAgBc,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACP,QAAQ,QAC/D,+BACE,4BACE,wBAAIC,QAAS,kBAAMjB,EAAMwB,WAAW,UAApC,QACA,wBAAIP,QAAS,kBAAMjB,EAAMwB,WAAW,WAApC,SACA,4CACA,qCAIJ,2BAAOjB,UAAU,IAEbP,EAAMyB,WAAWC,KAAK,SAAAC,GAAM,OAC5B,wBAAIC,IAAKD,EAAOC,KACd,4BAAKD,EAAOE,MAAZ,IAAoBF,EAAOG,MAC3B,4BAAKH,EAAOI,OACZ,4BAAKJ,EAAOK,OACZ,4BAAKL,EAAOM,a,QCsCbC,E,4MArDbC,MAAQ,CACNV,WAAYW,EACZzB,OAAQ,I,EAKVE,kBAAoB,SAACwB,GACnBA,EAAEC,iBACF,EAAKC,SAAS,CAAE5B,OAAQ0B,EAAEG,OAAO9B,OAAS,EAAKQ,e,EAGjDA,aAAe,WACb,GAAK,EAAKiB,MAAMxB,OAAO8B,OAEhB,CACL,IAAMC,EAAe,EAAKP,MAAMV,WAAWkB,QAAQ,SAAAhB,GACjD,OAAOA,EAAOG,KAAKc,SAAS,EAAKT,MAAMxB,WAEzC,EAAK4B,SAAS,CAAEd,WAAYiB,SAL5B,EAAKH,SAAS,CAAEd,WAAYW,K,EAShCZ,WAAa,SAACqB,GAEZ,IAAMC,EAAa,EAAKX,MAAMV,WAAWsB,MAAM,GAC/CD,EAAWE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEJ,GAAgBK,EAAEL,GAAiB,GAAK,KACrE,EAAKN,SAAS,CAAEd,WAAYqB,K,uDAS5B,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEnC,OAAQwC,KAAKhB,MAAMxB,OACnBO,aAAciC,KAAKjC,aACnBL,kBAAmBsC,KAAKtC,oBAE1B,kBAAC,EAAD,CACEY,WAAY0B,KAAKhB,MAAMV,WACvBD,WAAY2B,KAAK3B,kB,GAjDT4B,IAAMC,W,MCIxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAGFC,SAASC,eAAe,W","file":"static/js/main.6521e8c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <div>\r\n           <Jumbotron fluid>\r\n            <Container>\r\n                <h1>Employee Directory</h1>\r\n                 \r\n            </Container>\r\n           </Jumbotron>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n\r\n  \r\n","import React from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\nconst Searchbar = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Form inline className=\"center-align\">\r\n                <FormControl \r\n                    type=\"text\" \r\n                    value={props.search} \r\n                    onChange={props.handleInputChange} \r\n                    placeholder=\"Search\"\r\n                    className=\"mr-sm-2\" \r\n                />\r\n                <Button \r\n                    type=\"submit\" \r\n                    variant=\"outline-success\"\r\n                    onClick={props.searchPeople}\r\n                >\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Searchbar;\r\n\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nconst EmployeeTable = (props) => {\r\n\r\n  return (\r\n      <div>\r\n        <Table className= \"tableEmployee\" striped bordered hover variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th onClick={() => props.sortPeople(\"last\")}>Name</th>\r\n              <th onClick={() => props.sortPeople(\"email\")}>Email</th>\r\n              <th>Phone Number</th>\r\n              <th>DOB</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody className=\"\">\r\n            {/*   iterate over array marvel folder passed in from props     */}\r\n            { props.peopleList.map( person => (\r\n              <tr key={person.key}>\r\n                <td>{person.first} {person.last}</td>\r\n                <td>{person.email}</td>\r\n                <td>{person.phone}</td>\r\n                <td>{person.dob}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n  );\r\n    \r\n}\r\nexport default EmployeeTable\r\n\r\n\r\n{/* <tr> \r\n<td>Mark Bunch</td>\r\n<td>mark@markymark.com</td>\r\n<td>617-922-8810</td>\r\n<td>07/26/1968</td>\r\n</tr>\r\n<tr>\r\n<td>James Howlett</td>\r\n<td>weaponx@alphaflight.com</td>\r\n<td>416-681-3719</td>\r\n<td>10/01/1880</td>\r\n</tr>\r\n<tr>\r\n<td>Nathan Summers</td>\r\n<td>bodyslidetohq@xforce.com</td>\r\n<td>813-735-9173</td>\r\n<td>01/18/2045</td>\r\n</tr>\r\n<tr>\r\n<td>Piotr Rasputin</td>\r\n<td>insovietrussia@yakov.com</td>\r\n<td>7-940-318-65-48</td>\r\n<td>05/01/1975</td>\r\n</tr> */}","import React from 'react';\nimport Navbar from './components/Navbar';\nimport Searchbar from './components/Searchbar';\nimport EmployeeTable from './components/EmployeeTable';\nimport people from \"./components/marvel.json\"\n\nclass App extends React.Component {\n\n  // Our list of people is stored in state so we can modify it via search or sort\n  state = {\n    peopleList: people,\n    search: \"\"\n  }\n\n  // Update search field when user types\n  // searchpeople() needs to be a callback so it always has the latest value of state.search\n  handleInputChange = (e) => {\n    e.preventDefault()\n    this.setState({ search: e.target.value }, this.searchPeople)\n  }\n\n  searchPeople = () => {\n    if( !this.state.search.length ){\n      this.setState({ peopleList: people })\n    } else {\n      const filteredList = this.state.peopleList.filter( person => {\n        return person.last.includes(this.state.search)\n      })\n      this.setState({ peopleList: filteredList })\n    }\n  }\n\n  sortPeople = (propToSortBy) => {\n    // slice(0) clones an array\n    const sortedList = this.state.peopleList.slice(0)\n    sortedList.sort((a, b) => (a[propToSortBy] > b[propToSortBy]) ? 1 : -1)\n    this.setState({ peopleList: sortedList })\n  }\n\n  // Ref: https://flaviocopes.com/how-to-sort-array-of-objects-by-property-javascript/\n\n\n  \n\n  render(){\n    return (\n      <>\n        <Navbar/>\n        <Searchbar \n          search={this.state.search}\n          searchPeople={this.searchPeople}\n          handleInputChange={this.handleInputChange}\n        />\n        <EmployeeTable \n          peopleList={this.state.peopleList}\n          sortPeople={this.sortPeople} \n        />\n      </>\n    )\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\n\nimport './index.css';\n// import * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}